---
// ThemeToggle.astro - Dark/Light mode toggle component
---

<button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
  <svg class="sun-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
    <circle cx="12" cy="12" r="5"/>
    <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"/>
  </svg>
  <svg class="moon-icon" viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
  </svg>
</button>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.5rem;
    transition: background-color 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgb(var(--gray-dark));
  }

  .theme-toggle:hover {
    background-color: rgba(var(--gray-light), 0.5);
  }

  .sun-icon,
  .moon-icon {
    width: 1.25rem;
    height: 1.25rem;
  }

  [data-theme="light"] .moon-icon,
  [data-theme="dark"] .sun-icon {
    display: none;
  }

  [data-theme="light"] .sun-icon,
  [data-theme="dark"] .moon-icon {
    display: block;
  }
</style>

<script>
  function initThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    if (!themeToggle) return;

    themeToggle.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  
  // Re-initialize after page transitions (if using View Transitions)
  document.addEventListener('astro:after-swap', initThemeToggle);
</script>